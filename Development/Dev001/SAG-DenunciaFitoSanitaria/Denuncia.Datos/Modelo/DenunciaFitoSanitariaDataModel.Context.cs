//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Denuncia.Datos.Modelo
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using Entidad;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class dbDenunciaFitoSanitariaEntities : DbContext
    {
        public dbDenunciaFitoSanitariaEntities()
            : base("name=dbDenunciaFitoSanitariaEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ApiToken> ApiToken { get; set; }
        public virtual DbSet<aspnet_Applications> aspnet_Applications { get; set; }
        public virtual DbSet<aspnet_Membership> aspnet_Membership { get; set; }
        public virtual DbSet<aspnet_Paths> aspnet_Paths { get; set; }
        public virtual DbSet<aspnet_PersonalizationAllUsers> aspnet_PersonalizationAllUsers { get; set; }
        public virtual DbSet<aspnet_PersonalizationPerUser> aspnet_PersonalizationPerUser { get; set; }
        public virtual DbSet<aspnet_Profile> aspnet_Profile { get; set; }
        public virtual DbSet<aspnet_Roles> aspnet_Roles { get; set; }
        public virtual DbSet<aspnet_SchemaVersions> aspnet_SchemaVersions { get; set; }
        public virtual DbSet<aspnet_Users> aspnet_Users { get; set; }
        public virtual DbSet<aspnet_WebEvent_Events> aspnet_WebEvent_Events { get; set; }
        public virtual DbSet<Categoria> Categoria { get; set; }
        public virtual DbSet<Denuncia> Denuncia { get; set; }
        public virtual DbSet<EstadoDenuncia> EstadoDenuncia { get; set; }
        public virtual DbSet<RolesAccesosWebSiteMap> RolesAccesosWebSiteMap { get; set; }
        public virtual DbSet<SubCategoria> SubCategoria { get; set; }
        public virtual DbSet<SubCategoria_Imagenes> SubCategoria_Imagenes { get; set; }
        public virtual DbSet<TipoDenuncia> TipoDenuncia { get; set; }
        public virtual DbSet<WebSiteMap> WebSiteMap { get; set; }
    
        public virtual ObjectResult<sp_ListadoDenuncias_Result> sp_ListadoDenuncias(string estadoDenuncia, string tipoDenuncia, string fechaDesde, string fechaHasta, string categoria, string subCategoria, string region, string comuna, string userName)
        {
            var estadoDenunciaParameter = estadoDenuncia != null ?
                new ObjectParameter("EstadoDenuncia", estadoDenuncia) :
                new ObjectParameter("EstadoDenuncia", typeof(string));
    
            var tipoDenunciaParameter = tipoDenuncia != null ?
                new ObjectParameter("TipoDenuncia", tipoDenuncia) :
                new ObjectParameter("TipoDenuncia", typeof(string));
    
            var fechaDesdeParameter = fechaDesde != null ?
                new ObjectParameter("FechaDesde", fechaDesde) :
                new ObjectParameter("FechaDesde", typeof(string));
    
            var fechaHastaParameter = fechaHasta != null ?
                new ObjectParameter("FechaHasta", fechaHasta) :
                new ObjectParameter("FechaHasta", typeof(string));
    
            var categoriaParameter = categoria != null ?
                new ObjectParameter("Categoria", categoria) :
                new ObjectParameter("Categoria", typeof(string));
    
            var subCategoriaParameter = subCategoria != null ?
                new ObjectParameter("SubCategoria", subCategoria) :
                new ObjectParameter("SubCategoria", typeof(string));
    
            var regionParameter = region != null ?
                new ObjectParameter("Region", region) :
                new ObjectParameter("Region", typeof(string));
    
            var comunaParameter = comuna != null ?
                new ObjectParameter("Comuna", comuna) :
                new ObjectParameter("Comuna", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ListadoDenuncias_Result>("sp_ListadoDenuncias", estadoDenunciaParameter, tipoDenunciaParameter, fechaDesdeParameter, fechaHastaParameter, categoriaParameter, subCategoriaParameter, regionParameter, comunaParameter, userNameParameter);
        }
    }
}
