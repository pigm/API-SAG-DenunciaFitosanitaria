@model Denuncia.Presentacion.MVC.Web.Models.CategoriaModel

<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true"></button>
    <h4 class="modal-title">
        @if (Model.EsNuevo)
        { <text>Nueva Categoría</text> }
        else
        { <text>Editar Categoría</text> }
    </h4>
</div>
@using (Html.BeginForm(Model.EsNuevo ? "Crear" : "Modificar", "MantencionCategoria", FormMethod.Post, new { @id = "formCategoria", @class = "form-horizontal", @role = "form", @enctype = "multipart/form-data" }))
{
    <div class="modal-body">
        <div class="row">
            <div class="col-md-12">
                <div class="form-group">
                    @Html.Label("Tipo", new { @class = "control-label col-md-3" })
                    <div class="col-md-6">
                        @Html.DropDownListFor(model => model.IdTipoDenuncia, Model.ListaTipoDenuncia, new { @class = "form-control input-sm" })
                        @Html.ValidationMessageFor(model => model.IdTipoDenuncia, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <div class="form-group">
                    @Html.LabelFor(model => model.Nombre, new { @class = "control-label col-md-3" })
                    <div class="col-md-6">
                        @Html.TextBoxFor(model => model.Nombre, new { @class = "form-control input-sm", @maxlength = "50" })
                        @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <div class="form-group">
                    @Html.LabelFor(model => model.ImagenUrl, new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        <div class="fileinput fileinput-new" data-provides="fileinput">
                            <div class="fileinput-new thumbnail" style="width: 200px; height: 150px;">
                                @if (Model.EsNuevo)
                                {
                                    <img src="~/assets/apps/img/NoImage.png" alt="" />
                                }
                                else
                                {
                                    var imagen = Model.ImagenUrl;
                                    <img src="@Url.Content(Model.ImagenUrl)" alt="" />
                                }
                            </div>
                            <div class="fileinput-preview fileinput-exists thumbnail" style="max-width: 200px; max-height: 150px;"> </div>
                            <div class="input-group input-large">
                                <div class="form-control uneditable-input input-fixed input-medium" data-trigger="fileinput">
                                    <i class="fa fa-file fileinput-exists"></i>&nbsp;
                                    <span class="fileinput-filename"> </span>
                                </div>
                                <span class="input-group-addon btn default btn-file btn-xs">
                                    <span class="fileinput-new"> Examinar </span>
                                    <span class="fileinput-exists"> Cambiar </span>
                                    <input type="file" id="file" name="file" />
                                </span>
                                <a href="javascript:;" class="input-group-addon btn red fileinput-exists" data-dismiss="fileinput"> Eliminar </a>
                            </div>
                            @Html.ValidationMessageFor(model => model.FotoImagen, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <div class="form-group">
                    <label class="control-label col-md-3" for="Estado">Activar Estado</label>
                    <div class="col-md-6">
                        <input id="switchEstado" name="switchEstado" class="make-switch" type="checkbox" @if (Model.EsNuevo) { <text> disabled checked </text>  } else if (Model.Estado) { <text> checked </text> } data-on-text="Si" data-off-text="No" data-size="small" data-toggle="toggle">
                    </div>
                </div>
            </div>
        </div>
    </div>
    @Html.HiddenFor(model => model.EsNuevo)
    @Html.HiddenFor(model => model.ImagenUrl)
    if (!Model.EsNuevo)
    {
        @Html.HiddenFor(model => model.IdCategoria)
    }
    <div class="modal-footer">
        <button type="button" class="btn btn-circle dark btn-outline" data-dismiss="modal">Cerrar</button>
        <button id="btnGuardar" name="btnGuardar" class="btn btn-circle green" type="button"><i class="fa fa-save"></i> Guardar</button>
    </div>
}
